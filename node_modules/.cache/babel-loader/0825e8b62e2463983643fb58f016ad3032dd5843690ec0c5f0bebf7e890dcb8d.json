{"ast":null,"code":"var _jsxFileName = \"/Users/cex/Documents/JS/smart-brain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Logo from './components/Logo/Logo';\nimport Navigation from './components/Navigation/Navigation';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Clarifai = require('clarifai');\nconst app = new Clarifai.App({\n  apiKey: '33ae34510ce844dd81ba2294c21d84c4'\n});\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n    this.onButtonSubmit = () => {\n      console.log('click');\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": \"clarifai\",\n          \"app_id\": \"main\"\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": \"IMAGE_URL\"\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + 'YOUR_PERSONAL_ACCESS_TOKEN'\n        },\n        body: raw\n      };\n\n      // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n      // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n      // this will default to the latest version_id\n\n      fetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n    };\n    this.state = {\n      input: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Particles\",\n        children: /*#__PURE__*/_jsxDEV(ParticlesBg, {\n          type: \"cobweb\",\n          num: 300,\n          color: \"#ffffff\",\n          bg: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","ImageLinkForm","Logo","Navigation","Rank","ParticlesBg","jsxDEV","_jsxDEV","Fragment","_Fragment","Clarifai","require","app","App","apiKey","constructor","onInputChange","event","console","log","target","value","onButtonSubmit","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","text","result","catch","error","state","input","render","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","num","color","bg"],"sources":["/Users/cex/Documents/JS/smart-brain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Logo from './components/Logo/Logo';\nimport Navigation from './components/Navigation/Navigation';\nimport Rank from './components/Rank/Rank';\nimport ParticlesBg from 'particles-bg'\n\nconst Clarifai = require('clarifai');\n\nconst app = new Clarifai.App({\n apiKey: '33ae34510ce844dd81ba2294c21d84c4'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n    }\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n  }\n\n  onButtonSubmit = () => {\n    console.log('click');\n\nconst raw = JSON.stringify({\n  \"user_app_id\": {\n    \"user_id\": \"clarifai\",\n    \"app_id\": \"main\"\n  },\n  \"inputs\": [\n      {\n          \"data\": {\n              \"image\": {\n                  \"url\": \"IMAGE_URL\"\n              }\n          }\n      }\n  ]\n});\n\nconst requestOptions = {\n    method: 'POST',\n    headers: {\n        'Accept': 'application/json',\n        'Authorization': 'Key ' + 'YOUR_PERSONAL_ACCESS_TOKEN'\n    },\n    body: raw\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nfetch(`https://api.clarifai.com/v2/models/face-detection/versions/6dc7e46bc9124c5c8824be4822abe105/outputs`, requestOptions)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n  \n  }\n\n  render() {\n    return (\n      <>\n        <div className='App'>\n          <Navigation />\n          <Logo />\n          <Rank />\n          <ImageLinkForm \n            onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit} \n          />\n          { /* <FaceRecognition /> */ }\n        </div>\n        <div className='Particles'>\n          <ParticlesBg type=\"cobweb\" num={300} color='#ffffff' bg={true} />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}